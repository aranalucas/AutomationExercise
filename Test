# coding=utf-8
__author__ = 'lucas.arana'

import unittest
import time
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import Select

class Automation(unittest.TestCase):

    def setUp(self):
        self.browser = webdriver.Firefox()
        self.browser.get('http://10.28.148.127/wordpress')


# Exercise 1

    def __test_case_one(self):
        """
        Navegar al sitio.
        Validar que la pagina sea la esperada en base a su titulo
        """
        assert "Automation Training" in self.browser.title

    def __test_case_two(self):
        """
        Realizar una búsqueda
        Validar si hay resultados
        """
        elem = self.browser.find_element_by_id('s')
        elem.send_keys("Software")
        elem.send_keys(Keys.RETURN)
        assert "Nothing Found" not in self.browser.page_source

    def __test_case_three(self):
        """
        Validar que la fecha que se muestra para un post en la pagina principal
        coincida con la fecha al ingresar al post
        """
        dateElem = self.browser.find_element_by_xpath('//*[@id="post-41"]/header/div/a/time')
        dateElemText = dateElem.text
        dateElem.click()
        secondDateElemText = self.browser.find_element_by_xpath('//*[@id="post-41"]/header/div/a/time').text
        assert dateElemText == secondDateElemText

    def __test_case_four(self):
        """
        Ingresar a 'Contact us'
        Completar cada uno de los campos con valores correctos
        Enviar el formulario
        Validar que se haya enviado correctamente
        """

        contactUs = self.browser.find_element_by_xpath('//*[@id="access"]/div[3]/ul/li[2]/a')
        contactUs.click()

        nameField = self.browser.find_element_by_id('cntctfrm_contact_name')
        emailField = self.browser.find_element_by_id('cntctfrm_contact_email')
        subjectField = self.browser.find_element_by_id('cntctfrm_contact_subject')
        messageField = self.browser.find_element_by_id('cntctfrm_contact_message')
        submitField = self.browser.find_element_by_xpath('//*[@id="cntctfrm_contact_form"]/div[9]/input[4]')

        nameField.send_keys("Name")
        emailField.send_keys("example@mail.com")
        subjectField.send_keys("subject")
        messageField.send_keys("Trying message keys")
        submitField.click()

        #Averiguar como se valida que realmente mande mi mensaje sin chequearlo con texto.

    def __test_case_five(self):
        """
        Ingresar a 'Contact us'
        Omitir completar uno o varios campos
        Validar que el formulario no fue aceptado
        Corregir y completar cada campo
        Enviar el formulario
        Validar el envío
        """

        contactUs = self.browser.find_element_by_xpath('//*[@id="access"]/div[3]/ul/li[2]/a')
        contactUs.click()

        nameField = self.browser.find_element_by_id('cntctfrm_contact_name')
        emailField = self.browser.find_element_by_id('cntctfrm_contact_email')
        subjectField = self.browser.find_element_by_id('cntctfrm_contact_subject')
        submitField = self.browser.find_element_by_xpath('//*[@id="cntctfrm_contact_form"]/div[9]/input[4]')

        nameField.send_keys("Name")
        emailField.send_keys("example@mail.com")
        subjectField.send_keys("subject")
        submitField.click()

        #Averiguar como se valida que realmente mi mensaje no salio.

        submitField = self.browser.find_element_by_xpath('//*[@id="cntctfrm_contact_form"]/div[11]/input[4]')
        messageField = self.browser.find_element_by_id('cntctfrm_contact_message')
        messageField.send_keys("Trying message keys")

        submitField.click()

    def test_case_six(self):
        """
        Ir a la página principal
        Utilizando el calendario:
        Verificar cuantos días del mes actual tienen posts
        Ingresar en el primer día que tenga posts
        Contar la cantidad de posts que hay para ese día e imprimir los títulos por consola
        """

        tableElem = Select(self.browser.find_element_by_id('wp-calendar'))
        print tableElem.options




    # def tearDown(self):
    #     self.browser.close()




if __name__ == '__main__':
    unittest.main()







